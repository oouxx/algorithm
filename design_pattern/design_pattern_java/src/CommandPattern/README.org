* advantage
  
1. 降低系统的耦合度。由于请求者与接收者之间不存在直接引用，因此请求者与接收者之间
实现完全解耦，相同的请求者可以对应不同的接收者，同样，相同的接收者也可以供不同的
请求者使用，两者之间具有良好的独立性。
2. 新的命令可以很容易地加入到系统中。由于增加新的具体命令类不会影响到其他类，因此增加新的具体命令类很容易，无须修改原有系统源代码，甚至客户类代码，满足“开闭原则”的
要求。
1. 可以比较容易地设计一个命令队列或宏命令（组合命令）。
2. 为请求的撤销(Undo)和恢复(Redo)操作提供了一种设计和实现方案。
* disadvantage
  
1. 使用命令模式可能会导致某些系统有过多的具体命令类。因为针对每一个对请求接收者的调
* situation
  
1. 系统需要将请求调用者和请求接收者解耦，使得调用者和接收者不直接交互。请求调用者
无须知道接收者的存在，也无须知道接收者是谁，接收者也无须关心何时被调用。
2. 系统需要在不同的时间指定请求、将请求排队和执行请求。一个命令对象和请求的初始调
用者可以有不同的生命期，换言之，最初的请求发出者可能已经不在了，而命令对象本身仍
然是活动的，可以通过该命令对象去调用请求接收者，而无须关心请求调用者的存在性，可
以通过请求日志文件等机制来具体实现。
3. 系统需要支持命令的撤销(Undo)操作和恢复(Redo)操作。
4. 系统需要将一组操作组合在一起形成宏命令。
